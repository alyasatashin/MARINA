module.exports.config = {
 name: "antiout",
 eventType: ["log:unsubscribe"],
 version: "0.0.1",
 credits: "ЁЭЩЛЁЭЩзЁЭЩЮЁЭЩоЁЭЩЦЁЭЩгЁЭЩиЁЭЩЭ ЁЭЩНЁЭЩЦЁЭЩЯЁЭЩеЁЭЩкЁЭЩй",
 description: "Listen events"
};

module.exports.run = async({ event, api, Threads, Users }) => {
 let data = (await Threads.getData(event.threadID)).data || {};
 if (data.antiout == false) return;
 if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) return;
 const name = global.data.userName.get(event.logMessageData.leftParticipantFbId) || await Users.getNameUser(event.logMessageData.leftParticipantFbId);
 const type = (event.author == event.logMessageData.leftParticipantFbId) ? "self-separation" : "ЁЯе╣";
 if (type == "self-separation") {
  api.addUserToGroup(event.logMessageData.leftParticipantFbId, event.threadID, (error, info) => {
   if (error) {
    api.sendMessage(`${name} ржмрж╕ рждрж╛ржорж┐ржо рж╕рж░рж┐ ржЕрзНржпрж╛ржб ржХрж░рждрзЗ ржкрж╛рж░рж▓рж╛ржо ржирж╛ ЁЯе║:( `, event.threadID)
   } else api.sendMessage(`ЁЯНТЁЯОАрж╢рзБржи тЫ╡ржЖржорж┐ ржЖрж░ ржЖржорж╛рж░ ржмрж╕ рждрж╛ржорж┐ржо ржерж╛ржХрждрзЗ рждрзБрзНржЗ ржЧрзНрж░рзВржк ржерзЗржХрзЗ ржпрж╛ржЗрждрзЗ ржкрж╛рж░ржмрж┐ ржирж╛ ЁЯШбЁЯТл \n\n
  ЁЯЦд ${name} ЁЯЦд
  \n\nЁЯМ╕ ЁЭРАЁЭРЭЁЭРжЁЭРвЁЭРз ЁЯШб ржПржЯрж╛ржХрзЗ ЁЭРАЁЭРйЁЭРйЁЭРлЁЭРиЁЭРпЁЭРЪЁЭРе ржжрж┐рзЯрзЗ ржжрж╛ржУ ржЖржорж┐ ржЕрзНржпрж╛ржб ржжрж┐ржЫрж┐ .ЁЯЩГЁЯШЕ`, event.threadID);
  })
 }
}
